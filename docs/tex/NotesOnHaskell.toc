\contentsline {section}{\numberline {1}From category theory to Haskell}{1}{section.1}%
\contentsline {subsection}{\numberline {1.1}Types versus sets-with-added-structure}{1}{subsection.1.1}%
\contentsline {subsubsection}{\numberline {1.1.1}What types and sets-with-added-structure reject from one another.}{2}{subsubsection.1.1.1}%
\contentsline {subsection}{\numberline {1.2}Comparing $\mathbf {Hask}_\text {tot}$ to $\mathbf {Sets}$}{2}{subsection.1.2}%
\contentsline {subsection}{\numberline {1.3}The category $\text {IO}(\mathbf {Hask}_\text {tot})$.}{2}{subsection.1.3}%
\contentsline {subsubsection}{\numberline {1.3.1}Morphisms in $\text {IO}(\mathbf {Hask}_{\text {tot}})$ as program-level combinators}{3}{subsubsection.1.3.1}%
\contentsline {subsection}{\numberline {1.4}Other examples}{3}{subsection.1.4}%
\contentsline {subsection}{\numberline {1.5}The Kleisli category $\mathbf {K}\pmb {\ell }_\text {IO}$.}{3}{subsection.1.5}%
\contentsline {subsection}{\numberline {1.6}Observations and common issues}{3}{subsection.1.6}%
\contentsline {subsubsection}{\numberline {1.6.1}Libraries live in $\mathbf {Hask}_\text {tot}$, executable programs live in $\mathbf {K}\pmb {\ell }_{\text {IO}}$}{3}{subsubsection.1.6.1}%
\contentsline {subsubsection}{\numberline {1.6.2}Would-be class constructors that interact with the machine}{3}{subsubsection.1.6.2}%
\contentsline {section}{\numberline {2}Haskell and optimization}{3}{section.2}%
\contentsline {subsection}{\numberline {2.1}Optimization between $\mathbf {K}\pmb {\ell }_{\text {IO}}$ and $\mathbf {Hask}_{\text {tot}}$}{4}{subsection.2.1}%
